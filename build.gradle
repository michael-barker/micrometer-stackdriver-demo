buildscript {
    ext {
        kotlinVersion = '1.2.71'
        springBootVersion = '2.0.5.RELEASE'
    }
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath("org.jetbrains.kotlin:kotlin-allopen:${kotlinVersion}")
        classpath("org.jetbrains.kotlin:kotlin-gradle-plugin:${kotlinVersion}")
        classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
    }
}

plugins {
    id 'com.google.cloud.tools.jib' version '0.9.11'
}

group = 'io.michael-barker'
version = '0.0.1-SNAPSHOT'

apply plugin: 'io.spring.dependency-management'
apply plugin: 'kotlin'
apply plugin: 'kotlin-spring'
apply plugin: 'org.springframework.boot'

sourceCompatibility = 1.8
compileKotlin {
    kotlinOptions {
        freeCompilerArgs = ["-Xjsr305=strict"]
        jvmTarget = "1.8"
    }
}
compileTestKotlin {
    kotlinOptions {
        freeCompilerArgs = ["-Xjsr305=strict"]
        jvmTarget = "1.8"
    }
}

repositories {
    mavenCentral()
}

ext {
    springCloudGcpVersion = '1.0.0.RELEASE'
    springCloudVersion = 'Finchley.SR1'
}

dependencies {
    implementation('com.google.cloud:google-cloud-monitoring:1.47.0')
    implementation('com.fasterxml.jackson.module:jackson-module-kotlin')
    implementation('io.micrometer:micrometer-registry-prometheus:1.0.6')
    implementation("org.jetbrains.kotlin:kotlin-stdlib-jdk8")
    implementation("org.jetbrains.kotlin:kotlin-reflect")
    implementation('org.springframework.boot:spring-boot-starter-actuator')
    implementation('org.springframework.boot:spring-boot-starter-webflux')
    implementation('org.springframework.cloud:spring-cloud-gcp-starter')
    implementation('org.springframework.cloud:spring-cloud-gcp-starter-trace')
//    implementation('com.google.cloud:google-cloud-logging-logback:0.66.0-alpha')

    testImplementation('io.projectreactor:reactor-test')
    testImplementation('org.springframework.boot:spring-boot-starter-test')
}

dependencyManagement {
    imports {
        mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
        mavenBom "org.springframework.cloud:spring-cloud-gcp-dependencies:${springCloudGcpVersion}"
    }
}

jib.to.image = "gcr.io/micrometer-stackdriver/micrometer-stackdriver-demo"
